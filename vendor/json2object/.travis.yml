language: haxe

os:
  - linux
  # - osx

haxe:
  #- 3.4.1
  #- 3.4.7
  #- 4.2.0
  - development

dist: trusty

# thanks to Andy Li! https://github.com/andyli/HaxeCI
addons:
  # This is the preferred way to install apt packages.
  # However, it only allow some but not all packages.
  # Alternatively, we can use `sudo apt-get install ...` in the `install:` section.
  # http://docs.travis-ci.com/user/apt/#Adding-APT-Packages
  apt:
    packages:
      - cmake
      - ninja-build
      # C++ (for rebuilding hxcpp)
      - gcc-multilib
      - g++-multilib
      # Python
      - python3
      # C#
      - mono-devel
      - mono-mcs
      # Lua
      - libpcre3-dev
      # HL
      - libpng-dev
      - libjpeg-turbo8-dev
      - libturbojpeg
      - zlib1g-dev
      - libvorbis-dev

install:
  # os-specific config
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
      phpenv global 7.0;
    elif [ "${TRAVIS_OS_NAME}" = "osx" ]; then
      brew update;
      brew install mono;
      brew upgrade python;
      brew install php@7.2;
    fi
  # Haxe Lua dependencies
  #- if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
  #    brew install pcre;
  #    export PATH=$PATH:/Users/travis/Library/Python/2.7/bin;
  #  fi
  #- pip install --user hererocks
  #- export PATH=$PATH:$HOME/lua_env/bin/
  #- hererocks $HOME/lua_env/ -l5.2 -rlatest -i
  #- lua -v
  #- luarocks
  #- export LUA_SERVER=https://luarocks.org/dev
  #- luarocks install lrexlib-pcre 2.8.0-1 $LUA_SERVER
  #- luarocks install luv 1.22.0-1 $LUA_SERVER
  #- luarocks install luasocket 3.0rc1-2 $LUA_SERVER
  #- luarocks install luautf8 0.1.1-1 $LUA_SERVER
  # HL
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
      brew install ninja;
    fi
  - if [ "${TRAVIS_HAXE_VERSION}" = "development" ]; then
      export HL_DIR=$HOME/hashlink;
      git clone https://github.com/HaxeFoundation/hashlink.git $HL_DIR;
      export HL_BUILD=$HOME/hashlink_build;
      mkdir $HL_BUILD;
    fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ] && [ "${TRAVIS_HAXE_VERSION}" = "development" ]; then
      brew bundle --file=$HL_DIR/Brewfile;
    fi
  - if [ "${TRAVIS_HAXE_VERSION}" = "development" ]; then
      cmake -GNinja -DBUILD_TESTING=OFF -DWITH_BULLET=OFF -DWITH_DIRECTX=OFF -DWITH_FMT=ON -DWITH_OPENAL=OFF -DWITH_SDL=OFF -DWITH_SQLITE=OFF -DWITH_SSL=OFF -DWITH_UI=OFF -DWITH_UV=OFF -DWITH_VIDEO=OFF -B$HL_BUILD -H$HL_DIR;
      cmake --build $HL_BUILD;
      export PATH=$PATH:$HL_BUILD/bin/;
      hl --version;
    else
      export PATH=$PATH:$HOME;
      ln -s /bin/echo $HOME/hl;
    fi
  # Install haxelibs
  - if [ "${TRAVIS_HAXE_VERSION}" = "development" ]; then
      haxelib git utest https://github.com/haxe-utest/utest.git;
      git clone https://github.com/HaxeFoundation/hxcpp.git;
      haxelib dev hxcpp hxcpp;
      pushd $(haxelib path hxcpp | head -1);
        pushd tools/hxcpp; haxe compile.hxml; popd;
        pushd project; neko build.n; haxe compile-cppia.hxml; popd;
      popd;
    else
      haxelib install utest;
      haxelib install hxcpp;
    fi
  - haxelib install hxjava
  - haxelib install hxcs
  - haxelib install hxjsonast # dep for json2object
  - haxelib list

script:
  - haxe tests/build/build_all.hxml
  - if [ "${TRAVIS_HAXE_VERSION}" = "4.2.0" ] || [ "${TRAVIS_HAXE_VERSION}" = "development" ]; then
      haxe tests/build/build_jvm.hxml;
      haxe tests/build/build_cppia.hxml;
    fi
